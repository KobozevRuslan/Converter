{"version":3,"sources":["components/exchange/Exchange.js","store/actionTypes.js","services/Api.js","utils/formatData.js","components/rates/Rates.js","store/actions/app.js","components/App.js","store/reducers/app.js","store/index.js","index.js"],"names":["Display","styled","div","Exchange","initialLog","RUR","EUR","USD","data","useSelector","state","app","currency","useState","isSelling","setIsSelling","rates","find","item","curr","value","setValue","result","setResult","JSON","parse","localStorage","getItem","ls","setLs","onOperationChange","flag","to","IconButton","ButtonGroup","color","Button","onClick","removeItem","Typography","variant","TextField","type","label","placeholder","onChange","e","val","Number","target","buy","sell","toFixed","logs","logItem","push","setItem","stringify","map","i","FETCH_DATA_SUCCESS","CHANGE_CURRENCY","Api","fetchData","a","fetch","res","json","Error","message","formatData","reduce","acc","ccy","sale","_id","Row","isActive","otherProps","TableRow","Table","MuiTable","Rates","history","useHistory","dispatch","useDispatch","onCurrencyChange","payload","ActionTypes","size","aria-label","TableHead","TableCell","TableBody","row","component","scope","App","useEffect","exact","path","render","initialState","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","logger","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e5c472bb.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport {Button, ButtonGroup, IconButton, Input, Paper, TextField, Typography} from '@material-ui/core';\r\nimport KeyboardBackspaceSharpIcon from '@material-ui/icons/KeyboardBackspaceSharp';\r\n\r\nconst Display = styled.div`\r\n  border-radius: 6px;\r\n  padding: 15px;\r\n  box-shadow: 0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%);\r\n  background: #f8f8f8;\r\n  width: fit-content;\r\n`;\r\nconst Exchange = () => {\r\n  const initialLog = {\r\n    RUR: [],\r\n    EUR: [],\r\n    USD: []\r\n  }\r\n  const data = useSelector(state => state.app.data);\r\n  const currency = useSelector(state => state.app.currency);\r\n  const [isSelling, setIsSelling] = useState(true)\r\n  const rates = data.find(item => item.curr === currency);\r\n  const [value, setValue] = useState(0);\r\n  const [result, setResult] = useState(0);\r\n  const [ls, setLs] = useState(JSON.parse(localStorage.getItem('log')) || initialLog);\r\n\r\n  const onOperationChange = (flag) => {\r\n    setIsSelling(flag)\r\n    setValue(0)\r\n    setResult(0)\r\n  }\r\n\r\n  const onInputChange = (e) => {\r\n    const val = Number(e.target.value);\r\n    setValue(val)\r\n    setResult((isSelling ? val * rates.buy : val * rates.sell).toFixed(2))\r\n  }\r\n\r\n  const onExchange = () => {\r\n    const logs = JSON.parse(localStorage.getItem('log')) || initialLog;\r\n    const logItem = `${isSelling ? 'Sell' : 'Buy'} ${value} ${currency}, receive ${result} UAH`\r\n    logs[currency].push(logItem)\r\n    localStorage.setItem('log', JSON.stringify(logs));\r\n    setLs(logs);\r\n\r\n  }\r\n\r\n  const onClearLog = () => {\r\n    setLs(initialLog);\r\n    localStorage.removeItem('log')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/\">\r\n        <IconButton>\r\n          <KeyboardBackspaceSharpIcon />\r\n        </IconButton>\r\n      </Link>\r\n      <ButtonGroup color=\"primary\">\r\n        <Button onClick={() => onOperationChange(true)}>Sell</Button>\r\n        <Button onClick={() => onOperationChange(false)}>Buy</Button>\r\n        <Button onClick={onClearLog} color=\"secondary\">Clear log</Button>\r\n      </ButtonGroup>\r\n\r\n      <hr/>\r\n      <Typography variant=\"h4\">{isSelling ? 'Sell' : 'Buy' }-{currency}</Typography>\r\n      <div>\r\n        <div>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            type=\"number\"\r\n            label={`Amount: ${currency}`}\r\n            placeholder={`Amount: ${currency}`}\r\n            value={value ? value : ''}\r\n            onChange={onInputChange}\r\n          />\r\n          <div>\r\n            <Display>You will receive: {result} UAH</Display>\r\n          </div>\r\n          <hr/>\r\n          <Button variant=\"outlined\" onClick={onExchange}>Exchange</Button>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <Typography variant=\"subtitle1\">Log:</Typography>\r\n        <ul>\r\n          {ls[currency].map((item, i) => <li key={i}>{item}</li>)}\r\n        </ul>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Exchange;\r\n\r\n","export const FETCH_DATA_START = 'FETCH_DATA_START';\r\nexport const FETCH_DATA_SUCCESS = 'FETCH_DATA_SUCCESS';\r\nexport const FETCH_DATA_ERROR = 'FETCH_DATA_ERROR';\r\n\r\nexport const CHANGE_CURRENCY = 'CHANGE_CURRENCY';","const url = 'https://api.privatbank.ua/p24api/pubinfo?json&exchange&coursid=5';\r\n\r\nclass Api {\r\n  static fetchData = async () => {\r\n    try {\r\n      const res = await fetch(url);\r\n      return await res.json();\r\n    } catch (e) {\r\n      throw new Error(e.message);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Api\r\n","export const formatData = (data) => {\r\n  let i = 0;\r\n  return data.reduce((acc, curr) => {\r\n    if (curr.ccy === 'BTC') return acc\r\n    acc.push({\r\n      curr: curr.ccy,\r\n      buy: Number(curr.buy).toFixed(2),\r\n      sell: Number(curr.sale).toFixed(2),\r\n      _id: i++\r\n    });\r\n    return acc\r\n  }, [])\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport {Table as MuiTable} from '@material-ui/core';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {changeCurrency} from \"../../store/actions/app\";\r\nimport {useHistory} from \"react-router\";\r\n\r\nconst Row = styled(({ isActive, ...otherProps}) => <TableRow {...otherProps} />)`\r\n  transition: all .3s ease;\r\n  background: ${({isActive}) => isActive ? '#d1d1d1' : '#fff'};\r\n  &:hover {\r\n    cursor: pointer;\r\n    background: #f1f1f1;\r\n  }\r\n`;\r\n\r\nconst Table = styled(MuiTable)`\r\n  max-width: 300px;\r\n`;\r\n\r\nconst Rates = () => {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const data = useSelector(state => state.app.data);\r\n  const currency = useSelector(state => state.app.currency);\r\n\r\n  const onCurrencyChange = (val) => {\r\n    dispatch(changeCurrency(val))\r\n    history.push('/exchange')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h4>Choose your currency from the list below</h4>\r\n        <Table size=\"small\" aria-label=\"Exchange rates\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Currency</TableCell>\r\n              <TableCell>Buy</TableCell>\r\n              <TableCell>Sell</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map((row) => (\r\n              <Row key={row._id} onClick={() => onCurrencyChange(row.curr)} isActive={row.curr === currency}>\r\n                <TableCell component=\"th\" scope=\"row\">{row.curr}</TableCell>\r\n                <TableCell>{row.buy}</TableCell>\r\n                <TableCell>{row.sell}</TableCell>\r\n              </Row>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rates\r\n","import * as ActionTypes from '../actionTypes'\r\nimport {Api} from \"../../services\";\r\nimport {formatData} from \"../../utils\";\r\n\r\nconst fetchDataStart = () => {\r\n  return { type: ActionTypes.FETCH_DATA_START }\r\n}\r\n\r\nconst fetchDataSuccess = (payload) => {\r\n  return { type: ActionTypes.FETCH_DATA_SUCCESS, payload }\r\n}\r\nconst fetchDataError = () => {\r\n  return { type: ActionTypes.FETCH_DATA_ERROR }\r\n}\r\n\r\nexport const changeCurrency = (payload) => {\r\n  localStorage.setItem('currency', payload)\r\n  return {\r\n    type: ActionTypes.CHANGE_CURRENCY,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const fetchData = () => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(fetchDataStart())\r\n      const data = await Api.fetchData()\r\n      dispatch(fetchDataSuccess(formatData(data)))\r\n\r\n    } catch (e) {\r\n      dispatch(fetchDataError())\r\n    }\r\n  }\r\n}","import { BrowserRouter as Router, Switch, Redirect, Route } from 'react-router-dom';\r\nimport Exchange from \"./exchange\";\r\nimport {useEffect} from \"react\";\r\nimport {fetchData} from \"../store/actions/app\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {Rates} from \"./rates\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchData())\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" render={ () => <Rates />} />\r\n          <Route exact path=\"/exchange\" render={ () => <Exchange />} />\r\n          {/*<Redirect to=\"/\" />*/}\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import * as ActionTypes from '../actionTypes';\r\n\r\nexport const initialState = {\r\n  data: [],\r\n  currency: localStorage.getItem('currency') || 'USD'\r\n};\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.FETCH_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        data: action.payload\r\n      };\r\n    case ActionTypes.CHANGE_CURRENCY:\r\n      return {\r\n        ...state,\r\n        currency: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport {appReducer} from \"./reducers/app\";\r\n\r\nconst rootReducer = combineReducers({\r\n  app: appReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk, logger)\r\n);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}